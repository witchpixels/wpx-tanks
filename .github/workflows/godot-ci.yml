# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GODOT_VERSION: 4.1.1
  EXPORT_NAME: wiitchpixels_tanks


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  export-windows:
    if: false #github.event_name == 'push'
    name: Windows Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:mono-4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Fetch all history for all tags and branches
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --prune --unshallow
      - name: Setup
        run: |
          wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt update
          apt install -y dotnet-sdk-6.0
          mkdir -v -p ~/.local/share/godot/templates
          ls /root/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        id: gitversion
        with:
          useConfigFile: true
      - name: Stamp Version
        run: |
          export GitVersion_FullSemVer = "${{steps.gitversion.outputs.fullSemVer}}"
          ./.build/stamp_version.sh
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless -v --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows
          
  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:mono-4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Fetch all history for all tags and branches
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --prune --unshallow
      - name: Setup
        run: |
          wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt update
          apt install -y dotnet-sdk-6.0
          mkdir -v -p ~/.local/share/godot/templates
          ls /root/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        id: gitversion
        with:
          useConfigFile: true
      - name: Stamp Version
        run: |
          export GitVersion_FullSemVer = "${{steps.gitversion.outputs.fullSemVer}}"
          ./.build/stamp_version.sh
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless -v --export-release "Linux/X11" build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-mac:
    if: false #github.event_name == 'push'
    name: Mac Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:mono-4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Fetch all history for all tags and branches
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --prune --unshallow
      - name: Setup
        run: |
          wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt update
          apt install -y dotnet-sdk-6.0
          mkdir -v -p ~/.local/share/godot/templates
          ls /root/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        id: gitversion
        with:
          useConfigFile: true
      - name: Stamp Version
        run: |
          export GitVersion_FullSemVer = "${{steps.gitversion.outputs.fullSemVer}}"
          ./.build/stamp_version.sh
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          godot --headless -v --export-release "macOS" build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac
