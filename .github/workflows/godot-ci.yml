# This is a basic workflow to help you get started with Actions

name: Export Project

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GODOT_VERSION: 4.1.1
  EXPORT_NAME: wiitchpixels_tanks


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_project_linux:
    name: Build Project (Linux)
    runs-on: ubuntu-latest
    container:
      image: witchpixels/godot4-omnibuilder3d:latest-4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Fix paths for Github
        run: setup_github_paths.sh

      - name: Import assets
        run: godot -v -e --quit --headless

      - name: Stamp Versions
        run: | 
          apply_version_info.sh
          echo "SEMVER=$SEMVER" >> $GITHUB_ENV

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless -v --export-release "Linux/X11" build/linux/$EXPORT_NAME.x86_64

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.EXPORT_NAME }}-${{ env.SEMVER }}-linux
          path: build/linux
  
  build_project_windows:
    name: Build Project (Windows Desktop)
    runs-on: ubuntu-latest
    container:
      image: witchpixels/godot4-omnibuilder3d:latest-4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Fix paths for Github
        run: setup_github_paths.sh

      - name: Import assets
        run: godot -v -e --quit --headless

      - name: Stamp Versions
        run: | 
          apply_version_info.sh
          echo "SEMVER=$SEMVER" >> $GITHUB_ENV

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless -v --export-release "Windows Desktop" build/windows/$EXPORT_NAME.x86_64
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.EXPORT_NAME }}-${{ env.SEMVER }}-windows
          path: build/windows